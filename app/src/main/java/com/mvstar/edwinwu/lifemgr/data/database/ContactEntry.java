package com.mvstar.edwinwu.lifemgr.data.database;

import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.Index;
import android.arch.persistence.room.PrimaryKey;
import android.arch.persistence.room.Room;


/**
 * Defines the schema of a table in {@link Room} for a single contact. Indexes
 * allow for fast lookup for the column.
 */
@Entity(tableName = "contact", indices = {@Index(value = {"email"}, unique = true)})
public class ContactEntry {

    /**
     * Makes sure the id is the primary key (ensures uniqueness), is auto generated by {@link Room}.
     */
    @PrimaryKey(autoGenerate = true)
    private int id;
    private String email;
    private String nickName;
    private String mobileNumber;
    private String info;

    /**
     * This constructor is used by OpenContactJsonParser. When the network fetch has JSON data, it
     * converts this data to ContactEntry objects using this constructor.
     * @param email email address
     * @param nickName nick name
     * @param mobileNumber mobile number
     * @param info personal information
     */
    @Ignore
    public ContactEntry(String email, String nickName, String mobileNumber, String info) {
        this.email = email;
        this.nickName = nickName;
        this.mobileNumber = mobileNumber;
        this.info = info;
    }

    // Constructor used by Room to create ContactEntries
    public ContactEntry(int id, String email, String nickName, String mobileNumber, String info) {
        this.id = id;
        this.email = email;
        this.nickName = nickName;
        this.mobileNumber = mobileNumber;
        this.info = info;
    }

    public int getId() {
        return id;
    }

    public String getEmail() {
        return email;
    }

    public String getNickName() {
        return nickName;
    }

    public String getMobileNumber() {
        return mobileNumber;
    }

    public String getInfo() {
        return info;
    }
}
